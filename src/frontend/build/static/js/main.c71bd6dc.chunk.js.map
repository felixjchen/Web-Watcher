{"version":3,"sources":["components/threetree_90.png","components/login.js","components/page.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","props","react_default","a","createElement","id","Header","aria-label","HeaderName","href","prefix","Grid","Row","Column","sm","span","offset","md","lg","className","TextInput","labelText","PasswordInput","Button","size","kind","onClick","signupHandler","loginHandler","src","fractel","alt","action","console","log","headers","key","header","Page","HeaderContainer","render","Fragment","HeaderGlobalBar","HeaderGlobalAction","logoutHandler","bucket_10","DataTable","rows","watchers","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","Object","assign","title","concat","email","TableToolbar","TableToolbarContent","TableToolbarSearch","onChange","Table","TableHead","TableRow","map","TableHeader","TableBody","row","cells","date","Date","setUTCSeconds","value","String","cell","TableCell","gatewayAddress","silentRefreshTimeout","login","_ref2","asyncToGenerator","regenerator_default","mark","_callee","password","options","response","responseText","_JSON$parse","success","accessTokenExpiry","wrap","_context","prev","next","document","getElementById","Loading","method","credentials","body","JSON","stringify","Content-Type","redirect","fetch","sent","text","parse","alert","components_login","signup","getProfile","setTimeout","silentRefresh","stop","_x","apply","this","arguments","logout","_ref3","_callee2","requestOptions","_context2","clearTimeout","abrupt","_ref4","_callee3","_context3","_ref5","_callee4","_JSON$parse2","_context4","components_page","_ref6","_callee5","_JSON$parse3","_context5","initialSilentRefresh","_ref7","_callee6","_context6","t0"],"mappings":"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","file":"static/js/main.c71bd6dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/threetree_90.8428407b.png\";","import React from \"react\";\nimport {\n  Header,\n  HeaderName,\n  Grid,\n  Row,\n  Column,\n  Button,\n  TextInput,\n} from \"carbon-components-react\";\nimport \"./login.css\";\nimport fractel from \"./threetree_90.png\";\n\nconst Login = (props) => (\n  <div id=\"login\">\n    <Header aria-label=\"header\">\n      <HeaderName href=\"#\" prefix=\"Web\">\n        Watcher\n      </HeaderName>\n    </Header>\n    <Grid>\n      <Row>\n        <Column\n          id=\"leftBox\"\n          sm={{ span: 4, offset: 0 }}\n          md={{ span: 4, offset: 1 }}\n          lg={{ span: 4, offset: 2 }}\n        >\n          <h1 className=\"bx--type-semibold\">Sign in to your account</h1>\n          <TextInput id=\"email\" labelText=\"Email\" />\n          <TextInput.PasswordInput id=\"password\" labelText=\"Password\" />\n          <Button size=\"small\" kind=\"secondary\" onClick={props.signupHandler}>\n            Sign up\n          </Button>\n          <Button size=\"small\" onClick={props.loginHandler}>\n            Log in\n          </Button>\n        </Column>\n        <Column\n          id=\"rightBox\"\n          sm={{ span: 0 }}\n          md={{ span: 2 }}\n          lg={{ span: 4 }}\n        >\n          <img src={fractel} alt=\"fractel\"></img>\n        </Column>\n      </Row>\n    </Grid>\n  </div>\n);\n\nexport default Login;\n","import React from \"react\";\nimport {\n  Header,\n  HeaderName,\n  HeaderContainer,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  TableToolbar,\n  TableToolbarContent,\n  TableToolbarSearch,\n  DataTable,\n  Button,\n  OverflowMenu,\n  OverflowMenuItem,\n} from \"carbon-components-react\";\nimport { Logout20 } from \"@carbon/icons-react\";\nimport \"./page.css\";\n\nlet action = () => {\n  console.log(\"Add WATCHER\");\n};\n\nconst headers = [\n  {\n    key: \"url\",\n    header: \"URL\",\n  },\n  {\n    key: \"frequency\",\n    header: \"Frequency\",\n  },\n  {\n    key: \"last_run\",\n    header: \"Last Run\",\n  },\n  {\n    key: \"options\",\n    header: \"Options\",\n  },\n];\n\nconst Page = (props) => {\n  return (\n    <div id=\"page\">\n      <HeaderContainer\n        render={() => (\n          <>\n            <Header aria-label=\"IBM Platform Name\">\n              <HeaderName prefix=\"Web\">Watcher</HeaderName>\n              <HeaderGlobalBar>\n                <HeaderGlobalAction\n                  aria-label=\"Logout\"\n                  onClick={props.logoutHandler}\n                >\n                  <Logout20 />\n                </HeaderGlobalAction>\n              </HeaderGlobalBar>\n            </Header>\n          </>\n        )}\n      />\n\n      <DataTable rows={props.watchers} headers={headers}>\n        {({\n          rows,\n          headers,\n          getHeaderProps,\n          getRowProps,\n          getTableProps,\n          getToolbarProps,\n          onInputChange,\n          getTableContainerProps,\n        }) => (\n          <TableContainer\n            title={`Hello ${props.email}`}\n            // description={`Welcome ${props.email}`}\n            {...getTableContainerProps()}\n          >\n            <TableToolbar\n              {...getToolbarProps()}\n              aria-label=\"data table toolbar\"\n            >\n              <TableToolbarContent>\n                <TableToolbarSearch onChange={onInputChange} />\n                <Button onClick={action}>Add Watcher</Button>\n              </TableToolbarContent>\n            </TableToolbar>\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  {headers.map((header) => (\n                    <TableHeader\n                      key={header.key}\n                      {...getHeaderProps({ header })}\n                    >\n                      {header.header}\n                    </TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => {\n                  console.log(row.cells);\n                  let date = new Date(0);\n                  date.setUTCSeconds(row.cells[2].value);\n                  row.cells[2].value = String(date);\n                  row.cells[3].value = \"DROPDOWN\";\n                  return (\n                    <TableRow key={row.id} {...getRowProps({ row })}>\n                      {row.cells.map((cell) => (\n                        <TableCell key={cell.id}>{cell.value}</TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </DataTable>\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport { Loading } from \"carbon-components-react\";\nimport { render } from \"react-dom\";\n\nimport Login from \"./components/login\";\nimport Page from \"./components/page\";\n\nconst gatewayAddress =\n  \"https://bwaexdxnvc.execute-api.us-east-2.amazonaws.com/prod\";\nlet silentRefreshTimeout = null;\n\nlet login = async ({ email, password }) => {\n  if (email == null) {\n    email = document.getElementById(\"email\").value;\n  }\n  if (password == null) {\n    password = document.getElementById(\"password\").value;\n  }\n\n  render(<Loading />, document.getElementById(\"root\"));\n\n  let options = {\n    method: \"POST\",\n    credentials: \"include\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n  };\n\n  let response = await fetch(`${gatewayAddress}/login`, options);\n  let responseText = await response.text();\n  let { success, accessTokenExpiry } = JSON.parse(responseText);\n\n  console.log(responseText);\n  if (!success) {\n    alert(\"Bad login\");\n    render(\n      <Login signupHandler={signup} loginHandler={login} />,\n      document.getElementById(\"root\")\n    );\n  } else {\n    await getProfile();\n    silentRefreshTimeout = setTimeout(\n      silentRefresh,\n      (accessTokenExpiry - 2) * 1000\n    );\n  }\n};\n\nlet logout = async () => {\n  var requestOptions = {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n  };\n\n  let response = await fetch(`${gatewayAddress}/logout`, requestOptions);\n  let responseText = await response.text();\n  render(\n    <Login signupHandler={signup} loginHandler={login} />,\n    document.getElementById(\"root\")\n  );\n\n  // Stop silent refresh\n  clearTimeout(silentRefreshTimeout);\n\n  return JSON.parse(responseText).success;\n};\n\nlet signup = async () => {\n  let email = document.getElementById(\"email\").value;\n  let password = document.getElementById(\"password\").value;\n\n  render(<Loading />, document.getElementById(\"root\"));\n\n  let options = {\n    method: \"POST\",\n    credentials: \"include\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n  };\n\n  let response = await fetch(`${gatewayAddress}/user`, options);\n  let responseText = await response.text();\n  console.log(responseText);\n\n  login({ email, password });\n};\n\nlet getProfile = async () => {\n  var requestOptions = {\n    credentials: \"include\",\n  };\n\n  let response = await fetch(`${gatewayAddress}/user`, requestOptions);\n  let responseText = await response.text();\n\n  let { email, watchers } = JSON.parse(responseText);\n  console.log(\"Rendering\", email, watchers);\n  render(\n    <Page logoutHandler={logout} email={email} watchers={watchers} />,\n    document.getElementById(\"root\")\n  );\n};\n\nlet silentRefresh = async () => {\n  let requestOptions = {\n    method: \"POST\",\n    credentials: \"include\",\n  };\n\n  let response = await fetch(`${gatewayAddress}/refresh`, requestOptions);\n  let responseText = await response.text();\n  let { success, accessTokenExpiry } = JSON.parse(responseText);\n\n  // If something is wrong with refresh token.. we logout\n  if (!success) {\n    await logout();\n  } else {\n    // Start silent refresh a couple seconds early... so we always have an access token\n    silentRefreshTimeout = setTimeout(\n      silentRefresh,\n      (accessTokenExpiry - 2) * 1000\n    );\n    getProfile();\n  }\n\n  return success;\n};\n\nlet initialSilentRefresh = async () => {\n  try {\n    let success = await silentRefresh();\n\n    // if (success) {\n    //   await getProfile();\n    // }\n  } catch (err) {\n    console.log(\"Initial silent refresh fail \" + err);\n  }\n};\n\nrender(<Loading />, document.getElementById(\"root\"));\ninitialSilentRefresh();\n"],"sourceRoot":""}