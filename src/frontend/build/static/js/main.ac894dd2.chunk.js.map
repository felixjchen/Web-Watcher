{"version":3,"sources":["components/threetree_90.png","components/login.js","components/page.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","props","react_default","a","createElement","id","Header","aria-label","HeaderName","prefix","Grid","Row","Column","sm","span","offset","md","lg","className","TextInput","labelText","onKeyPress","event","key","loginHandler","PasswordInput","Button","size","kind","onClick","signupHandler","src","fractel","alt","toSeconds","everyHour","every6Hours","every12Hours","every24Hours","fromSeconds","3600","21600","43200","86400","headers","header","Page","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateWatchers","asyncToGenerator","regenerator_default","mark","_callee","requestOptions","response","responseText","_JSON$parse","watchers","oldState","wrap","_context","prev","next","credentials","fetch","concat","gatewayAddress","sent","text","JSON","parse","forEach","i","date","Date","setUTCSeconds","last_run","String","slice","state","setState","stop","deleteWatcher","_ref2","_callee2","watcherId","_context2","method","Content-Type","body","stringify","redirect","_x","apply","arguments","openModal","addWatcherModalOpen","closeModal","submitModal","_callee3","url","frequency","options","_context3","document","getElementById","value","window","RadioButtonGroup","selected","_this2","HeaderContainer","render","Fragment","HeaderGlobalBar","HeaderGlobalAction","logoutHandler","bucket_10","DataTable","rows","isSortable","_ref4","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","assign","title","email","TableToolbar","TableToolbarContent","TableToolbarSearch","onChange","Table","TableHead","TableRow","map","TableHeader","TableBody","row","TableCell","cells","style","display","Link","href","OverflowMenu","flipped","OverflowMenuItem","itemText","hasDivider","isDelete","Modal","hasForm","selectorPrimaryFocus","open","primaryButtonText","secondaryButtonText","shouldSubmitOnEnter","onRequestClose","onRequestSubmit","onSecondarySubmit","placeholder","marginBottom","FormGroup","legendText","defaultSelected","name","ref","RadioButton","React","Component","silentRefreshTimeout","login","_ref","password","success","accessTokenExpiry","console","log","Loading","setTimeout","silentRefresh","components_page","logout","alert","components_login","signup","_ref3","clearTimeout","abrupt","_ref5","_callee4","_JSON$parse2","_context4","initialSilentRefresh","_ref6","_callee5","_context5","t0"],"mappings":"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","file":"static/js/main.ac894dd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/threetree_90.8428407b.png\";","import React from \"react\";\nimport {\n  Header,\n  HeaderName,\n  Grid,\n  Row,\n  Column,\n  Button,\n  TextInput,\n} from \"carbon-components-react\";\nimport \"./login.css\";\nimport fractel from \"./threetree_90.png\";\n\nconst Login = (props) => (\n  <div id=\"login\">\n    <Header aria-label=\"header\">\n      <HeaderName prefix=\"Web\">Watcher</HeaderName>\n    </Header>\n    <Grid>\n      <Row>\n        <Column\n          id=\"leftBox\"\n          sm={{ span: 4, offset: 0 }}\n          md={{ span: 4, offset: 1 }}\n          lg={{ span: 4, offset: 2 }}\n        >\n          <h1 className=\"bx--type-semibold\">Sign in to your account</h1>\n          <TextInput\n            id=\"email\"\n            labelText=\"Email\"\n            onKeyPress={(event) => {\n              if (event.key === \"Enter\") {\n                props.loginHandler({});\n              }\n            }}\n          />\n          <TextInput.PasswordInput\n            id=\"password\"\n            labelText=\"Password\"\n            onKeyPress={(event) => {\n              if (event.key === \"Enter\") {\n                props.loginHandler({});\n              }\n            }}\n          />\n          <Button size=\"small\" kind=\"secondary\" onClick={props.signupHandler}>\n            Sign up\n          </Button>\n          <Button size=\"small\" onClick={props.loginHandler}>\n            Log in\n          </Button>\n        </Column>\n        <Column\n          id=\"rightBox\"\n          sm={{ span: 0 }}\n          md={{ span: 2 }}\n          lg={{ span: 4 }}\n        >\n          <img src={fractel} alt=\"fractel\"></img>\n        </Column>\n      </Row>\n    </Grid>\n  </div>\n);\n\nexport default Login;\n","import React from \"react\";\nimport {\n  Header,\n  HeaderName,\n  HeaderContainer,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  TableToolbar,\n  TableToolbarContent,\n  TableToolbarSearch,\n  DataTable,\n  Button,\n  OverflowMenu,\n  OverflowMenuItem,\n  TextInput,\n  Modal,\n  Link,\n  RadioButton,\n  RadioButtonGroup,\n  FormGroup,\n} from \"carbon-components-react\";\nimport { Logout20 } from \"@carbon/icons-react\";\nimport \"./page.css\";\n\nconst toSeconds = {\n  everyHour: 3600,\n  every6Hours: 21600,\n  every12Hours: 43200,\n  every24Hours: 86400,\n};\n\nconst fromSeconds = {\n  3600: \"every hour\",\n  21600: \"every 6 hours\",\n  43200: \"every 12 hours\",\n  86400: \"every 24 hours\",\n};\nconst headers = [\n  {\n    key: \"url\",\n    header: \"URL\",\n  },\n  {\n    key: \"frequency\",\n    header: \"Frequency\",\n  },\n  {\n    key: \"last_run\",\n    header: \"Last Run\",\n  },\n  {\n    key: \"options\",\n    header: \"\",\n  },\n];\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addWatcherModalOpen: false,\n      watchers: [],\n    };\n\n    this.updateWatchers();\n  }\n\n  updateWatchers = async () => {\n    let requestOptions = {\n      credentials: \"include\",\n    };\n\n    let response = await fetch(\n      `${this.props.gatewayAddress}/user`,\n      requestOptions\n    );\n    let responseText = await response.text();\n\n    let { watchers } = JSON.parse(responseText);\n    // Cleanup Date\n    watchers.forEach((i) => {\n      let date = new Date(0);\n      date.setUTCSeconds(i.last_run);\n      i.last_run = String(date).slice(0, 24);\n    });\n\n    let oldState = this.state;\n    oldState.watchers = watchers;\n    this.setState(oldState);\n  };\n\n  deleteWatcher = async (watcherId) => {\n    let requestOptions = {\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ watcherId }),\n      redirect: \"follow\",\n    };\n\n    await fetch(`${this.props.gatewayAddress}/watcher`, requestOptions);\n    this.updateWatchers();\n  };\n\n  openModal = () => {\n    let oldState = this.state;\n    oldState.addWatcherModalOpen = true;\n    this.setState(oldState);\n  };\n  closeModal = () => {\n    let oldState = this.state;\n    oldState.addWatcherModalOpen = false;\n    this.setState(oldState);\n  };\n  submitModal = async () => {\n    let url = document.getElementById(\"modalUrl\").value;\n\n    let frequency = toSeconds[window.RadioButtonGroup.state.selected];\n    let options = {\n      method: \"POST\",\n      credentials: \"include\",\n      body: JSON.stringify({ url, frequency }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n    };\n\n    let oldState = this.state;\n    oldState.addWatcherModalOpen = false;\n    this.setState(oldState);\n\n    await fetch(\n      \"https://bwaexdxnvc.execute-api.us-east-2.amazonaws.com/prod/watcher\",\n      options\n    );\n    this.updateWatchers();\n  };\n\n  render() {\n    return (\n      <div id=\"page\">\n        <HeaderContainer\n          render={() => (\n            <>\n              <Header aria-label=\"IBM Platform Name\">\n                <HeaderName\n                  // href=\"https://github.com/felixjchen/web-watcher\"\n                  prefix=\"Web\"\n                >\n                  Watcher\n                </HeaderName>\n                <HeaderGlobalBar>\n                  <HeaderGlobalAction\n                    id=\"logoutIcon\"\n                    aria-label=\"Logout\"\n                    onClick={this.props.logoutHandler}\n                  >\n                    <Logout20 />\n                  </HeaderGlobalAction>\n                </HeaderGlobalBar>\n              </Header>\n            </>\n          )}\n        />\n\n        <DataTable rows={this.state.watchers} headers={headers} isSortable>\n          {({\n            rows,\n            headers,\n            getHeaderProps,\n            getRowProps,\n            getTableProps,\n            getToolbarProps,\n            onInputChange,\n            getTableContainerProps,\n          }) => (\n            <TableContainer\n              title={`Welcome ${this.props.email}`}\n              // description={`Welcome ${props.email}`}\n              {...getTableContainerProps()}\n            >\n              <TableToolbar\n                {...getToolbarProps()}\n                aria-label=\"data table toolbar\"\n              >\n                <TableToolbarContent>\n                  <TableToolbarSearch onChange={onInputChange} />\n                  <Button onClick={this.openModal}>Add Watcher</Button>\n                </TableToolbarContent>\n              </TableToolbar>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow>\n                    {headers.map((header) => (\n                      <TableHeader\n                        key={header.key}\n                        {...getHeaderProps({\n                          header,\n                          isSortable: header.key !== \"options\",\n                        })}\n                      >\n                        {header.header}\n                      </TableHeader>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.map((row) => {\n                    return (\n                      <TableRow key={row.id} {...getRowProps({ row })}>\n                        <TableCell key={row.cells[0].id}>\n                          <p style={{ display: \"none\" }}>\n                            {row.cells[0].value}\n                          </p>\n                          <Link href={row.cells[0].value}>\n                            {row.cells[0].value}\n                          </Link>\n                        </TableCell>\n                        <TableCell key={row.cells[1].id}>\n                          {row.cells[1].value in fromSeconds\n                            ? fromSeconds[row.cells[1].value]\n                            : row.cells[1].value}\n                        </TableCell>\n                        <TableCell key={row.cells[2].id}>\n                          {row.cells[2].value}\n                        </TableCell>\n                        <TableCell key={row.cells[3].id}>\n                          {row.cells[3].value}\n                          <OverflowMenu flipped={true}>\n                            {/* <OverflowMenuItem itemText=\"Edit\" /> */}\n                            <OverflowMenuItem\n                              itemText=\"Delete\"\n                              hasDivider\n                              isDelete\n                              onClick={() => {\n                                this.deleteWatcher(row.id);\n                              }}\n                            />\n                          </OverflowMenu>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n        <Modal\n          hasForm\n          size={\"sm\"}\n          selectorPrimaryFocus=\"#text-input-2\"\n          open={this.state.addWatcherModalOpen}\n          primaryButtonText={\"Add\"}\n          secondaryButtonText={\"Cancel\"}\n          shouldSubmitOnEnter={true}\n          onRequestClose={this.closeModal}\n          onRequestSubmit={this.submitModal}\n          onSecondarySubmit={this.closeModal}\n        >\n          <TextInput\n            id=\"modalUrl\"\n            labelText=\"URL\"\n            placeholder=\"https://www.google.com/\"\n            style={{ marginBottom: \"1rem\" }}\n          />\n          <FormGroup legendText=\"Frequency\">\n            <RadioButtonGroup\n              defaultSelected=\"everyHour\"\n              name=\"frequency\"\n              ref={(RadioButtonGroup) => {\n                window.RadioButtonGroup = RadioButtonGroup;\n              }}\n            >\n              <RadioButton\n                labelText=\"every hour\"\n                value=\"everyHour\"\n                id=\"radio-1\"\n              />\n              <RadioButton\n                labelText=\"every 6 hours\"\n                value=\"every6Hours\"\n                id=\"radio-2\"\n              />\n              <RadioButton\n                labelText=\"every 12 hours\"\n                value=\"every12Hours\"\n                id=\"radio-3\"\n              />\n              <RadioButton\n                labelText=\"every 24 hours\"\n                value=\"every24Hours\"\n                id=\"radio-4\"\n              />\n            </RadioButtonGroup>\n          </FormGroup>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Page;\n","import React from \"react\";\nimport { Loading } from \"carbon-components-react\";\nimport { render } from \"react-dom\";\n\nimport Login from \"./components/login\";\nimport Page from \"./components/page\";\n\nconst gatewayAddress =\n  \"https://bwaexdxnvc.execute-api.us-east-2.amazonaws.com/prod\";\nlet silentRefreshTimeout = null;\n\nlet login = async ({ email, password }) => {\n  if (email == null) {\n    email = document.getElementById(\"email\").value;\n  }\n  if (password == null) {\n    password = document.getElementById(\"password\").value;\n  }\n\n  console.log(email, password)\n\n  render(<Loading />, document.getElementById(\"root\"));\n\n  let options = {\n    method: \"POST\",\n    credentials: \"include\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n  };\n\n  let response = await fetch(`${gatewayAddress}/login`, options);\n  let responseText = await response.text();\n  let { success, accessTokenExpiry } = JSON.parse(responseText);\n\n  console.log(responseText);\n  if (!success) {\n    alert(\"Login failed: username/password error\");\n    render(\n      <Login signupHandler={signup} loginHandler={login} />,\n      document.getElementById(\"root\")\n    );\n  } else {\n    silentRefreshTimeout = setTimeout(\n      silentRefresh,\n      (accessTokenExpiry - 2) * 1000\n    );\n    render(\n      <Page email={email} gatewayAddress={gatewayAddress} logoutHandler={logout} />,\n      document.getElementById(\"root\")\n    );\n  }\n};\n\nlet logout = async () => {\n  var requestOptions = {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n  };\n\n  let response = await fetch(`${gatewayAddress}/logout`, requestOptions);\n  let responseText = await response.text();\n  render(\n    <Login signupHandler={signup} loginHandler={login} />,\n    document.getElementById(\"root\")\n  );\n\n  // Stop silent refresh\n  clearTimeout(silentRefreshTimeout);\n\n  return JSON.parse(responseText).success;\n};\n\nlet signup = async () => {\n  let email = document.getElementById(\"email\").value;\n  let password = document.getElementById(\"password\").value;\n\n  render(<Loading />, document.getElementById(\"root\"));\n\n  let options = {\n    method: \"POST\",\n    credentials: \"include\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n  };\n\n  let response = await fetch(`${gatewayAddress}/user`, options);\n  let responseText = await response.text();\n  console.log(responseText);\n\n  login({ email, password });\n};\n\n\nlet silentRefresh = async () => {\n  let requestOptions = {\n    method: \"POST\",\n    credentials: \"include\",\n  };\n\n  let response = await fetch(`${gatewayAddress}/refresh`, requestOptions);\n  let responseText = await response.text();\n  let { success, accessTokenExpiry, email } = JSON.parse(responseText);\n  // If something is wrong with refresh token.. we logout\n  if (!success) {\n    await logout();\n  } else {\n    // Start silent refresh a couple seconds early... so we always have an access token\n    silentRefreshTimeout = setTimeout(\n      silentRefresh,\n      (accessTokenExpiry - 2) * 1000\n    );\n    render(\n      <Page email={email} gatewayAddress={gatewayAddress} logoutHandler={logout} />,\n      document.getElementById(\"root\")\n    );\n  }\n\n  return success;\n};\n\nlet initialSilentRefresh = async () => {\n  try {\n    await silentRefresh();\n  } catch (err) {\n    console.log(\"Initial silent refresh fail \" + err);\n  }\n};\n\nrender(<Loading />, document.getElementById(\"root\"));\ninitialSilentRefresh();\n"],"sourceRoot":""}